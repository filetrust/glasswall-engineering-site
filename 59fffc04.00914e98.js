(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{155:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return s}));var n=r(2),o=r(9),a=(r(0),r(199)),l={title:"Set-up of CI/CD for GitHub Repository",sidebar_label:"CI/CD Setup"},i={id:"guides/ci-cd-pipeline",title:"Set-up of CI/CD for GitHub Repository",description:"This guide will walk through the steps to set-up and create a CI/CD pipeline for your GitHub Repository",source:"@site/docs/guides/ci-cd-pipeline.md",permalink:"/glasswall-engineering-site/docs/guides/ci-cd-pipeline",sidebar_label:"CI/CD Setup",sidebar:"someSidebar",previous:{title:"FAQ",permalink:"/glasswall-engineering-site/docs/products/cloud-sdk/cloud-sdk-faq"}},c=[{value:"Steps",id:"steps",children:[{value:"Branch Policy",id:"branch-policy",children:[]},{value:"Repo Security",id:"repo-security",children:[]},{value:"Gated Build",id:"gated-build",children:[]},{value:"CI Build",id:"ci-build",children:[]},{value:"Deploy Build",id:"deploy-build",children:[]}]}],p={rightToc:c};function s(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This guide will walk through the steps to set-up and create a CI/CD pipeline for your GitHub Repository"),Object(a.b)("p",null,Object(a.b)("img",Object(n.a)({parentName:"p"},{src:"/img/CI-CD.png",alt:null}))),Object(a.b)("h2",{id:"steps"},"Steps"),Object(a.b)("h3",{id:"branch-policy"},"Branch Policy"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"On the GitHub repo, create a new branch from 'master' called 'develop'"),Object(a.b)("li",{parentName:"ol"},"Go to Settings > Branches, select 'develop' from the drop down list to make it the default branch, click update"),Object(a.b)("li",{parentName:"ol"},"Under 'Branch protection rules', click 'Add rule'"),Object(a.b)("li",{parentName:"ol"},"Add 'master' for 'Branch name pattern', check 'Restrict who can push to matching branches' and save."),Object(a.b)("li",{parentName:"ol"},"Add new branch protection rule for 'develop', with the following settings:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"Require pull request reviews before merging"),Object(a.b)("li",{parentName:"ul"},"Require status checks to pass before merging"),Object(a.b)("li",{parentName:"ul"},"Require branches to be up to date before merging")))),Object(a.b)("h3",{id:"repo-security"},"Repo Security"),Object(a.b)("p",null,"Next we need to add in the 'Glasswall-Github' user as an Admin of the repo so that we can perform branch merges from the actions, and use submodules."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"On the GitHub repo, go to Settings > Manage access > Invite teams or people"),Object(a.b)("li",{parentName:"ol"},"Search for 'Glasswall-Github' and select the Admin role."),Object(a.b)("li",{parentName:"ol"},"Go to to Settings > Secrets > Add a new secret"),Object(a.b)("li",{parentName:"ol"},"Name the secret 'TOKEN_GITHUB' and use the Personal Access Token which can be given to you by IT Support, as the value.")),Object(a.b)("h3",{id:"gated-build"},"Gated Build"),Object(a.b)("p",null,"Next step is to set-up a Gated build which will build our code and run tests on pull requests"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"On the GitHub repo, go to Actions > New workflow > set up a workflow yourself"),Object(a.b)("li",{parentName:"ol"},"Name the file 'gated.yml'"),Object(a.b)("li",{parentName:"ol"},"Copy the Gated file code from the Rebuild repo into the new file"),Object(a.b)("li",{parentName:"ol"},"Make any changes specific to your project (build steps, tests used)"),Object(a.b)("li",{parentName:"ol"},"Start commit > create new branch and start a pull request")),Object(a.b)("h3",{id:"ci-build"},"CI Build"),Object(a.b)("p",null,"Next step is to set-up a CI build which will deploy our code to a QA environment, run tests, and merge to the master branch if successful."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"On the GitHub repo, go to Actions > New workflow > set up a workflow yourself"),Object(a.b)("li",{parentName:"ol"},"Name the file 'ci.yml'"),Object(a.b)("li",{parentName:"ol"},"Copy the CI file template code into the new file"),Object(a.b)("li",{parentName:"ol"},"Make any changes specific to your project (deployment, environment, build steps, tests used)"),Object(a.b)("li",{parentName:"ol"},"Add any needed secrets (Access Ids and key) to the repo settings."),Object(a.b)("li",{parentName:"ol"},"Start commit > create new branch and start a pull request")),Object(a.b)("h3",{id:"deploy-build"},"Deploy Build"),Object(a.b)("p",null,"Next step is to set-up a Deploy build which will deploy our code to a Stage environment, run tests, and deploy to product if successful."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"On the GitHub repo, go to Actions > New workflow > set up a workflow yourself"),Object(a.b)("li",{parentName:"ol"},"Name the file 'deploy.yml'"),Object(a.b)("li",{parentName:"ol"},"Copy the Deploy file template code into the new file"),Object(a.b)("li",{parentName:"ol"},"Make any changes specific to your project (deployment, environment, build steps, tests used)"),Object(a.b)("li",{parentName:"ol"},"Add any needed secrets (Access Ids and key) to the repo settings."),Object(a.b)("li",{parentName:"ol"},"Start commit > create new branch and start a pull request")))}s.isMDXComponent=!0},199:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,m=u["".concat(l,".").concat(d)]||u[d]||b[d]||a;return r?o.a.createElement(m,i(i({ref:t},p),{},{components:r})):o.a.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<a;p++)l[p]=r[p];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);